Executive Summary: PID vs Heuristic Control Analysis
============================================================
Date: 2025-10-07 13:16:58

EXPERIMENTAL DESIGN:
--------------------
 Identical test trajectory: 0.5m -> 1.5m
 Same test duration: 30 seconds
 Same drone, sensors, and environmental conditions
 Fair comparison with controlled initial conditions

PERFORMANCE COMPARISON RESULTS:
-----------------------------------
PID Controller superior in: 3/6 metrics (50%)

KEY PERFORMANCE IMPROVEMENTS:
--------------------------------
 rms_error: -19.6% improvement
 steady_state_error: +73.6% improvement

TODO: Write your technical summary here
Based on the experimental results:
- Has PID outperformed if-else control?
Yes. The PID outperforms the if-else controls for an number of reasons. First, the heuristic if-else controller never truly settles, as its settling time is infinity. The PID control settles in 19.1s. Additionally, the overshoot is 35 percent for heuristic vs 1.3 percent for PID control, which shows that PID is a much safer and stabler controller. Additionally, thew steady state error is 74% better for the PID control. There are a few downsides, such as the faster rise time for heuristic, but because of the large bias and overshoot this is a small benefit to heuristic vs a large downside to the controller. Additionally, the RMS error is lower for heuristic (slightly, at 0.24 m vs .287m), but this is likely because it springs to the target early, yet still wavers outside of the unacceptable range. The chattering is a tie for both, measured around 0. PID wins in the most important metrics, while heuristic performs slightly better with the speed and RMS. With further tuning of the PID controller, it is likely that we could further improve the PID control results. 


- What are the key advantages?

The key advantages, as explained in the last question, is that the PID control has a settling time, while the heuristic never truly settles. Additionally, the steady state error of the PID is much improved, 0.041m, compared to the heuristic control at .153m. Additionally, the overshoot for heuristic is quite dramatic, at 35%, compared to the 1.3% overshoot for the PID control. 

It should be noted that the PID auto-selected the values used for this solution. Likely, because of the structure of the selection loop, the infinite settling time during PID selection caused PID parameters to be selected outside of the loop (defaulting to kp=0.3, for instance). Although the PID control still shows great improvements, there are likely ways to ensure that 6/6 of the key performance indicators are won by PID, including the RMS error. Some potential fixes to this performance could be increasing proportional control, which could speed up rise time and settling time, cutting down a large portion of the RMS. This is especially relevant because of the low overshoot, and we could afford slightly more overshotot for a faster settling time. Additionally, a slight increase in Kd could be useful as we raise Kp, to ensure that overshoot remains small and RMS remains low. 


- Does this provide competitive advantage?
Yes, the PID control provides a competitive advantage. In terms of safety and compliance, the overshoot is 27x lower for the PID control, and has a finite settling time, which is what the customers and regulators care about. Additionally, you can provide great accuracy with PID control, (74% lower steady state error), allowing us to claim a more precise altitude control when compared to heuristic. Finally, PID handles drift and noise better than the heuristic control, and remains table. 



RECOMMENDATION:s
--------------
TODO: Should AeroTech proceed with PID-based proposal?

YES. Due to the key advantages described earlier (lower overshoot, finite settling time, and smaller error long-term), the PID based proposal outperforms the heuristic control in the most important categories. Likely, with further tuning, we could also decrease settling time for PID which would likely decrease the RMS error as well. For these reasons, the PID based proposal should be used. 
